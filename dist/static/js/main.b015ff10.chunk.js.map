{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","config/fbConfig.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","store/actions/updateUser.js","components/finances/Amount.js","components/dashboard/About.js","components/dashboard/Account.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","fireapp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","db","compose","projects","ordered","users","notifications","firestoreConnect","collection","orderBy","count","id","map","user","email","jLink","item","key","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","Dashboard","this","isRendered","projectID","Component","ownProps","match","params","data","console","log","SignIn","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","amount","where","get","querySnapshot","forEach","element","currentUser","update","createProject","authorId","add","Date","CreateProject","updateUser","history","push","name","cols","rows","intRoomates","joinlink","increment","FieldValue","parseFloat","Amount","myId","sid","strOutput","owedAmount","intTotal","intPay","fas","currentAmount","roomAmount","toFixed","clear","About","Account","delete","error","del","App","exact","path","component","ProjectDetails","SignUp","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attatchAuthIsReady","authIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b015ff10.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/account'>Account</NavLink></li>\r\n        <li><NavLink to='/view-finances'>Your Finances</NavLink></li>\r\n        <li><NavLink to='/create'>New Entry</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n          </NavLink></li>\r\n      </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n  \r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n          firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0],\r\n          jLink: newUser.jLink,\r\n          email: newUser.email,\r\n          amount: 0\r\n        })\r\n      }).then(resp => {\r\n        firestore.collection('users').where('jLink', '==', newUser.jLink).get().then(function(querySnapshot) {\r\n          querySnapshot.forEach(element => {\r\n            firestore.collection('users').doc(firebase.auth().currentUser.uid).update({\r\n              [element.id]: 0\r\n            });\r\n            if (element.id != firebase.auth().currentUser.uid) {\r\n              firestore.collection('users').doc(element.id).update({\r\n                [firebase.auth().currentUser.uid]: 0\r\n              });\r\n            }\r\n          });\r\n        })\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/about\">About</NavLink></li>\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n      \r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className='brand-logo-left'>HomeSplit</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC2ALSv_BSrkcuH3jDqqW8TIdH-oZpwvkQ\",\r\n    authDomain: \"homesplit-abb79.firebaseapp.com\",\r\n    databaseURL: \"https://homesplit-abb79.firebaseio.com\",\r\n    projectId: \"homesplit-abb79\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"390876131201\",\r\n    appId: \"1:390876131201:web:49e53f2d71edb455\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  const fireapp = firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings( {timestampsInSnapshots: true });\r\n\r\n  const db = fireapp.firestore();\r\n\r\n  export { db };\r\n\r\n  export default firebase;","import { db } from '../../config/fbConfig'\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport firebase from 'firebase'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nconst Notifications = (props) => {\r\n  const { auth, notifications, users } = props;\r\n  var count = 0;\r\n  var id = \" \";\r\n  return (\r\n    <div className=\"section\">\r\n      \r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            {users && users.map(user => {\r\n              if (user.email == auth.email) {\r\n              id = user.jLink;\r\n              }\r\n            })}\r\n            { notifications && notifications.map(item =>{\r\n              \r\n              if (item.jLink == id && count < 3) {\r\n                count += 1;\r\n                return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n              }\r\n            })}\r\n            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    users: state.firestore.ordered.users,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  \r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', orderBy: ['time', 'desc']}\r\n  ]),\r\n  firestoreConnect([\r\n    { collection: 'users'}\r\n  ])\r\n)(Notifications)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName} </p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n\r\n    return (\r\n      <div className=\"project-list section\">\r\n          <Link to={'/project/' + projects.id} key={projects.id}>\r\n            <ProjectSummary project={projects} />\r\n          </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { db } from '../../config/fbConfig'\r\nimport firebase from 'firebase'\r\nimport { throwStatement } from '@babel/types'\r\n\r\nclass Dashboard extends Component {\r\n\r\n\r\n  render() {\r\n    \r\n    \r\n    \r\n    const { projects, auth, users, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    var id = auth.uid;\r\n    \r\n    var isRendered = false;\r\n\r\n    \r\n    return (\r\n\r\n      <div className = \"dashboard container\">\r\n        { projects && projects.map(project => {\r\n          {users && users.map(user => {\r\n            if (user.email == auth.email) {\r\n            id = user.jLink;\r\n            }\r\n          })}\r\n          var projectID = project.jLink;\r\n          if (id == projectID && isRendered == false) {\r\n            isRendered = true;\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                  <ProjectList projects={project}/>\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                  <Notifications notifications={notifications}/>\r\n                </div>\r\n              </div>\r\n            )\r\n          } else if (id === projectID && isRendered == true) {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                  <ProjectList projects={project}/>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n\r\n          \r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    users: state.firestore.ordered.users,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  \r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', orderBy: ['time', 'desc']}\r\n  ]),\r\n  firestoreConnect([\r\n    { collection: 'users'}\r\n  ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    console.log(props);\r\n    if (project) {\r\n        return (\r\n        \r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content proj-content\">\r\n                    <span className=\"card-title\">{ project.title }</span>\r\n                    <p>${ project.content }</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n                <div className=\"container center\">\r\n                    <p>Loading Project...</p>\r\n                </div>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-33\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions' \r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        jLink: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-33\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"jLink\">Group Link</label>\r\n                        <input type=\"text\" id=\"jLink\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{ authError }</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date(),\r\n            jLink: profile.jLink\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch( { type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n}; ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { updateUser } from '../../store/actions/updateUser'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.updateUser(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-33\">Create Entry</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Entry Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Amount Spent</label>\r\n                        <textarea name=\"\" id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project)),\r\n        updateUser: (project) => dispatch(updateUser(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import firebase from 'firebase'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { db } from '../../config/fbConfig'\r\n\r\n\r\nexport const updateUser = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const intPrevious = 0;\r\n        var uid = firebase.auth().currentUser.uid;\r\n        var intRoomates = 0;\r\n        db.collection(\"users\")\r\n.doc(firebase.auth().currentUser.uid)\r\n.get()\r\n.then(doc => {\r\n    var joinlink = doc.data().jLink;\r\n\r\nfirestore.collection('users').where('jLink', '==', joinlink).get().then(function(querySnapshot) {\r\n    querySnapshot.forEach(element => {\r\n        intRoomates += 1;\r\n    });\r\n    querySnapshot.forEach(element => {\r\n        if (firebase.auth().currentUser.email != element.data().email) {\r\n            const increment = firebase.firestore.FieldValue.increment(parseFloat(project.content, 10) / intRoomates);\r\n            firestore.collection('users').doc(element.id).update({\r\n                [uid]: increment\r\n            });\r\n        }\r\n    });\r\n})\r\n\r\n\r\n});\r\n\r\n\r\n\r\n    }\r\n}; ","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\n\r\nimport { db } from '../../config/fbConfig'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Amount extends Component {\r\n\r\n\r\n  clear(id){\r\n    console.log(id);\r\n    const myId = firebase.auth().currentUser.uid;\r\n    db.collection(\"users\")\r\n    .doc(firebase.auth().currentUser.uid)\r\n    .update({\r\n      [id]: 0\r\n    });\r\n    db.collection(\"users\")\r\n    .doc(id)\r\n    .update({\r\n      [myId]: 0\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { projects, auth, users } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    var sid = auth.uid;\r\n    var strOutput = '';\r\n    var owedAmount = 0.0;\r\n    var intTotal = 0.0;\r\n    var intPay = 0.0;\r\n    var updated = true;\r\n  \r\n    {users && users.map(user => {\r\n        if (user.email == auth.email) {\r\n            sid = user.jLink;\r\n        }\r\n    })}\r\n\r\n    return (\r\n      <div>\r\n        <div className = \"dashboard container section finances\">\r\n          <div className=\"card z-depth-0\">\r\n              <div className=\"card-content1\">\r\n                  <div className=\"title\">\r\n                    <span className=\"card-title1\">Your Current Roomates</span>\r\n                  </div>\r\n                  \r\n                  {users && users.map(user => {\r\n                      if (sid == user.jLink && user.email == auth.email) {\r\n                        return (\r\n                          <div>\r\n                            {users && users.map(fas => {\r\n                            if (sid == fas.jLink && fas.email != auth.email) { \r\n                              var currentAmount = user[fas.id]\r\n                              var roomAmount = fas[firebase.auth().currentUser.uid]\r\n                              if (roomAmount < currentAmount) {\r\n                                strOutput = 'You owe $';\r\n                                owedAmount = (currentAmount - roomAmount).toFixed(2);\r\n                                intPay +=  (currentAmount - roomAmount);\r\n                                return (\r\n                                  <div className=\"cards roomates negative\">\r\n                                      <h2>{ fas.firstName } { fas.lastName }</h2>\r\n                                      <p>{ strOutput }{ owedAmount }</p>\r\n                                  </div>\r\n                                )\r\n                            } else if (roomAmount > currentAmount) {\r\n                                strOutput = 'Owes you $';\r\n                                owedAmount = (roomAmount - currentAmount).toFixed(2);\r\n                                intTotal += (roomAmount - currentAmount);\r\n                                intTotal = parseFloat(intTotal, 10)\r\n                                return (\r\n                                  <div className=\"cards roomates positive\">\r\n                                      <h2>{ fas.firstName } { fas.lastName }</h2>\r\n                                      <p>{ strOutput }{ owedAmount }</p>\r\n                                      <button onClick={  (e) => { this.clear(fas.id); } } className=\"btn pink lighten-1 z-depth-0\">Clear Fee</button>\r\n                                      <h3 className=\"reload\">Reload Page after clicking button to see updated finances!</h3>\r\n                                  </div>\r\n                                  )\r\n                                   \r\n                            } else {\r\n                              strOutput = 'Owes you $0.00';\r\n                              return (\r\n                                <div className=\"cards roomates\">\r\n                                    <h2>{ fas.firstName } { fas.lastName }</h2>\r\n                                    <p>{ strOutput }</p>\r\n                                </div>\r\n                              )  \r\n                            }\r\n                            }\r\n                            \r\n                          })};\r\n                          \r\n                          </div>\r\n                          \r\n                        )\r\n                          \r\n                         \r\n                      }\r\n                      \r\n                  })}\r\n                  \r\n              </div>\r\n          </div>     \r\n        </div>\r\n\r\n\r\n        <div className = \"dashboard container section finances overall\">\r\n          <div className=\"card z-depth-0\">\r\n              <h1>Overall Finances</h1>\r\n              <div className=\"payout\">\r\n                <p>You need to pay:</p>\r\n                <h2>${ intPay.toFixed(2) }</h2>\r\n              </div>\r\n              <div className=\"collect\">\r\n                <p>You need to collect: </p>\r\n                <h2>${ intTotal.toFixed(2) }</h2>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        \r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      projects: state.firestore.ordered.projects,\r\n      users: state.firestore.ordered.users,\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n  export default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'projects'}\r\n    ]),\r\n    firestoreConnect([\r\n      { collection: 'users'}\r\n    ])\r\n  )(Amount)\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n        <div className = \"dashboard container section finances overall\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"about-title card-title\">\r\n                    <h1>Welcome to HomeSplit!</h1>\r\n                </div>\r\n                <div className=\"about-content card-content\">\r\n                    <p>\r\n                    Hi! Welcome to HomeSplit! This is an application\r\n                    created by Keshavaa Shaiskandan and is my first \r\n                    React Web application. I started this side project\r\n                    when I was in the first year of my computer science\r\n                    undergraduate program at the University of Toronto.\r\n                    <br></br><br></br>\r\n                    A few of my friends who were going to stay on res of\r\n                    the university of their choice were trying to come up\r\n                    with the best way to split costs amongst each other and\r\n                    their other roomates. This is when I had the idea to create\r\n                    this web application.\r\n                    <br></br><br></br>\r\n                    It is simple and easy to use. Simply sign up with your email,\r\n                    name and a joinlink. The joinlink can be anything of your choosing\r\n                    as long as it has already not been taken. Your other roomates can then\r\n                    sign up with their emails and the joinlink you created and you can be added\r\n                    to the same group! Simply click \"Add Entry\" to log a cost in the application.\r\n                    HomeSplit will automatically update everyone's dashboard with your entry and \r\n                    split the cost you logged among all your roomates. Your finances are viewable\r\n                    on the \"Finances\" page where you can see how much you owe certain roomates and \r\n                    how much they owe you!\r\n                    <br></br><br></br>\r\n                    If you accidentally joined someone else's group by using the wrong joinlink,\r\n                    simply delete your account on the settings page and signup again using the correct\r\n                    joinlink!\r\n                    <br></br><br></br>\r\n                    Have fun using my first React web application. Play around with and \r\n                    it and I hope it makes splitting costs with your roomates easier!\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { db } from '../../config/fbConfig'\r\nimport firebase from 'firebase'\r\nimport firestore from 'redux-firestore'\r\nimport { throwStatement } from '@babel/types'\r\n\r\nclass Account extends Component {\r\n\r\n    del(id){\r\n        db.collection('users').doc(firebase.auth().currentUser.uid).get().then(doc =>{\r\n            var joinlink = doc.data().jLink;\r\n            db.collection('users').where('jLink', '==', joinlink).get().then(function(querySnapshot) {\r\n                querySnapshot.forEach(element => {\r\n                    db.collection('users').doc(element.id).update({\r\n                        [id]: firebase.firestore.FieldValue.delete()\r\n                    })\r\n                });\r\n            })\r\n\r\n            db.collection('users').doc(id).delete();\r\n\r\n            var user = firebase.auth().currentUser;\r\n\r\n            user.delete().then(function() {\r\n            }).catch(function(error) {\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n  render() {\r\n    \r\n    \r\n    \r\n    const { projects, auth, users, notifications, profile } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    var id = auth.uid;\r\n    \r\n    return (\r\n\r\n      <div className = \"dashboard container\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"about-title card-title\">\r\n                <h1>User Profile</h1>\r\n            </div>\r\n            <div className=\"about-contents \">\r\n                <p>Name: <span className=\"data\">{profile.firstName} {profile.lastName}</span></p>\r\n                <p>Email: <span className=\"data\">{ profile.email}</span></p>\r\n                <p>JoinLink: <span className=\"data\"> {profile.jLink}</span></p>\r\n                <h2>Do you need to delete your account? Click Below</h2>\r\n                <div className=\"buttons\">\r\n                  <button type=\"submit\" onClick={() => {this.del(id, profile.jLink)}}className=\"btn pink lighten-1 z-depth-0 deletebtn\">Delete Account</button>\r\n                </div>\r\n                <h2>You will be signed out immidiately when you click the button\r\n                  If this does not occur, log out and sign back in and click the button\r\n                  if you need to delete your account!\r\n                </h2>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    users: state.firestore.ordered.users,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  \r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', orderBy: ['time', 'desc']}\r\n  ]),\r\n  firestoreConnect([\r\n    { collection: 'users'}\r\n  ])\r\n)(Account)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport Amount from './components/finances/Amount'\nimport About from './components/dashboard/About'\nimport Account from './components/dashboard/Account'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component = {SignIn} />\n          <Route path='/about' component = {About} />\n          <Route exact path=\"/account\" component={Account} />\n          <Route path='/signup' component = {SignUp} />\n          <Route path='/create' component = {CreateProject} />\n          <Route path='/view-finances' component = {Amount} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  \r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n  \r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n  \r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: \"help\", content:\"me\"},\r\n        {id: '2', title: \"asdf\", content:\"asd\"}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase, authIsReady } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attatchAuthIsReady: true})\n    )\n);\n\nauthIsReady(store).then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}